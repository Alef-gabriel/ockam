version: '3'

volumes:
  influxdb_data:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:7.3.2
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - broker
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:29092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      DYNAMIC_CONFIG_ENABLED: 'true'

  settopbox:
    build: ./settopbox
    environment:
      KAFKA_HOST: broker:29092
    depends_on: 
      - broker

  consumer:
    build: ./consumer
    environment:
      KAFKA_HOST: broker:29092
    depends_on: 
      - broker


  # influxdb:
  #   build: ./influxdb
  #   environment:
  #     OCKAM_PROJECT_NAME: influxdb-demo
  #     OCKAM_TOKEN: ${INFLUXDB_TOKEN}
  #     DOCKER_INFLUXDB_INIT_MODE: setup
  #     DOCKER_INFLUXDB_INIT_USERNAME: myusername
  #     DOCKER_INFLUXDB_INIT_PASSWORD: passwordpasswordpassword
  #     DOCKER_INFLUXDB_INIT_ORG: myorg
  #     DOCKER_INFLUXDB_INIT_BUCKET: mybucket
  #     DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: mytoken
  #   volumes:
  #     - influxdb_data:/var/lib/influxdb2:rw
  #     - ./config:/config
  #   ports:
  #     - 8087:8086

  # telegraf:
  #   build: ./telegraf
  #   depends_on:
  #     - influxdb
  #   environment:
  #     OCKAM_PROJECT_NAME: influxdb-demo
  #     OCKAM_TOKEN: ${TELEGRAF_TOKEN}
  #     DOCKER_INFLUXDB_INIT_ORG: myorg
  #     DOCKER_INFLUXDB_INIT_BUCKET: mybucket
  #     DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: mytoken
  #   volumes:
  #     - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  #     - ./config:/config

